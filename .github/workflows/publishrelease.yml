# triggers when a tag is added on any branch

on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release Binary Sketch

jobs:
  build:
    # the actual build has happened by another action which is run in any case 
    # there will be two compile actions one for master and one for all other branchess, essentially 
    # the same except the second will not genertae an artifact for deployment as releases are only 
    # done from master

    name: Get Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          workflow: arduino.yml
          name: sketchbin
          path: /home/runner/work/ArduinoGitAction/ArduinoGitAction/bin
          # Optional, defaults to current repo
          repo: ${{github.repository}}
      - name: Show downloads
        run: pwd && ls -R /home/runner/work/ArduinoGitAction/ArduinoGitAction/bin
      - name: Upload release artifact
        uses: actions/upload-artifact@v2
        with:
          name: sketchbin
          path: |
            /home/runner/work/ArduinoGitAction/ArduinoGitAction/bin/*.hex
            /home/runner/work/ArduinoGitAction/ArduinoGitAction/bin/*.elf
            /home/runner/work/ArduinoGitAction/ArduinoGitAction/bin/*.bin
  release:
    name: Deploy Release Asset
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: sketchbin
          path: /home/runner/work/ArduinoGitAction/ArduinoGitAction/bin
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: /home/runner/work/ArduinoGitAction/ArduinoGitAction/bin
      - name: Package release artifact
        run: |
          cd /home/runner
          zip --junk-paths sketchbin /home/runner/work/ArduinoGitAction/ArduinoGitAction/bin/*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /home/runner/sketchbin.zip
          asset_name: sketchbin.zip
          asset_content_type: application/zip
    