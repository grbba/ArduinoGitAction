on:
  push:
    branches:
      - main
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Binary Sketch

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          # Optional, GitHub token
          # github_token: ${{secrets.GITHUB_TOKEN}}
          # Required, workflow file name or ID
          workflow: arduino.yml
          # Optional, the status or conclusion of a completed workflow to search for
          # Can be one of a workflow conculsion::
          # "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Or a workflow status:
          # "completed", "in_progress", "queued"
          # Default: "completed"
          # workflow_conclusion: success
          # Optional, will get head commit SHA
          # pr: ${{github.event.pull_request.number}}
          # Optional, no need to specify if PR is
          # commit: ${{github.event.pull_request.head.sha}}
          # Optional, will use the branch
          # branch: master
          # Optional, will use specified workflow run
          # run_id: 1122334455
          # Optional, uploaded artifact name,
          # will download all artifacts if not specified
          # and extract them in respective subdirectories
          # https://github.com/actions/download-artifact#download-all-artifacts
          name: sketchbin
          # Optional, directory where to extract artifact
          path: bin
          # Optional, defaults to current repo
          # repo: ${{github.repository}}
      - name: Show downloads
        run: ls -R bin 
          && cat artifact/sha | grep $GITHUB_SHA
  #      - name: Build project # This would actually build your project, using zip for an example artifact
  #        run: |
  #          zip --junk-paths sketchbin README.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /home/runner/work/ArduinoGitAction/ArduinoGitAction/bin/sketchbin.zip
          asset_name: sketchbin.zip
          asset_content_type: application/zip